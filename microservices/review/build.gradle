import org.springframework.boot.buildpack.platform.build.PullPolicy

plugins {
    alias(gradleBuild.plugins.kotlin.spring)
    alias(gradleBuild.plugins.spring.boot)
    alias(gradleBuild.plugins.kotlin.jpa)
    alias(gradleBuild.plugins.spring.dependency.management)
}

allOpen {
    annotations("javax.persistence.Entity", "javax.persistence.MappedSuperclass", "javax.persistence.Embedabble")
}

dependencies {
    implementation libs.bundles.kotlin,
            libs.kotlin.jackson,
            libs.kotlin.reactor

    implementation libs.bundles.spring.reactiveWebServer,
            libs.spring.retry,
            libs.spring.boot.data.jpa

    implementation platform(boms.spring.cloud),
            libs.bundles.spring.cloud.base

    implementation libs.postgresql

    implementation project(":util"), project(":api")

    testImplementation testFixtures(project(":util")),
            platform(boms.testcontainers),
            testLibs.bundles.test,
            testLibs.testcontainers.postgresql
}

jar {
    enabled = false
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "failed", "skipped"]
    }
}

bootBuildImage {
    builder = "paketobuildpacks/builder:base"
    runImage = "paketobuildpacks/run:base-cnb"
    pullPolicy = PullPolicy.IF_NOT_PRESENT
    imageName = "${rootProject.name}/${project.name}"
}

tasks.register("buildImages") {
    dependsOn "bootBuildImage"
}
