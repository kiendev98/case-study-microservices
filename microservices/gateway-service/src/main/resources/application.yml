spring.application.name: gateway

server.port: 8443

#TODO: Investigate what is ssl here
server.ssl:
  key-store-type: PKCS12
  key-store: classpath:keystore/edge.p12
  key-store-password: password
  key-alias: localhost

app:
  authorization-server: localhost
  eureka:
    server: localhost
    username: u
    password: p


eureka:
  client:
    service-url:
      defaultZone: http://${app.eureka.username}:${app.eureka.password}@${app.eureka.server}:8761/eureka
    initial-instance-info-replication-interval-seconds: 5
    registry-fetch-interval-seconds: 5
  instance:
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 5

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${app.authorization-server}:9999

spring.cloud.gateway.routes:
  - id: product-composite
    uri: lb://product-composite
    predicates:
      - Path=/product-composite/**

  - id: oauth2-server
    uri: lb://authorization-server
    predicates:
      - Path=/oauth2/**

  - id: oauth2-login
    uri: lb://authorization-server
    predicates:
      - Path=/login/**

  - id: oauth2-error
    uri: lb://authorization-server
    predicates:
      - Path=/error/**

  - id: product-composite-swagger-ui
    uri: lb://product-composite
    predicates:
      - Path=/openapi/**

  - id: product-composite-swagger-ui-webjars
    uri: lb://product-composite
    predicates:
      - Path=/webjars/**

  - id: eureka-api
    uri: http://${app.eureka.server}:8761
    predicates:
      - Path=/eureka/api/{segment}
    filters:
      - SetPath=/eureka/{segment}

  - id: eureka-web-start
    uri: http://${app.eureka.server}:8761
    predicates:
      - Path=/eureka/web
    filters:
      - SetPath=/

  - id: eureka-web-other
    uri: http://${app.eureka.server}:8761
    predicates:
      - Path=/eureka/**

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE

---
spring.config.activate.on-profile: docker
app:
  eureka.server: eureka
  authorization-server: authorization-server

